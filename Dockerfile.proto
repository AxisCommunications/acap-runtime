# syntax=docker/dockerfile:1

ARG UBUNTU_VERSION=22.04
ARG TFSERVING_VERSION=2.9.0

# Build image, genearates proto files
FROM arm64v8/ubuntu:${UBUNTU_VERSION}  AS build-image

ARG TFSERVING_VERSION

RUN <<EOF
apt-get update && apt-get install -y --no-install-recommends \
python3 \
python3-pip \
git \
&& rm -rf /var/lib/apt/lists/*
EOF

# grpcio-tools contains protoc, which allows to build the pb2.py files in the install-tf.sh script.
# Installing directly grpcio-tools result in an older version of protobuf.
RUN pip install  --no-cache-dir \
      grpcio==1.46.3 \
      protobuf==4.21.1 \
      six==1.16.0
RUN pip install --no-dependencies \
      grpcio-tools==1.47.0

# Build TensorFlow serving proto files
WORKDIR /build/tf

RUN <<EOF
git clone --depth 1 --branch v${TFSERVING_VERSION}  https://github.com/tensorflow/tensorflow.git
git clone --depth 1 --branch ${TFSERVING_VERSION}  https://github.com/tensorflow/serving.git

TF_DIR="./tensorflow"
TFS_DIR="./serving"
OUT_DIR="./proto_utils"

mkdir $OUT_DIR

PROTO_FILES="$TF_DIR/tensorflow/core/example/*.proto
             $TF_DIR/tensorflow/core/framework/*.proto \
             $TF_DIR/tensorflow/core/protobuf/*.proto \
             $TFS_DIR/tensorflow_serving/apis/*.proto \
            "

PROTO_FILES_GRPC="$TFS_DIR/tensorflow_serving/apis/predict.proto \
                  $TFS_DIR/tensorflow_serving/apis/prediction_service.proto \
                 "

python3 -m grpc_tools.protoc -I "$TF_DIR" -I "$TFS_DIR" --python_out="$OUT_DIR" $PROTO_FILES
python3 -m grpc_tools.protoc -I "$TF_DIR" -I "$TFS_DIR" --grpc_python_out="$OUT_DIR" $PROTO_FILES_GRPC

EOF
COPY apis/wrappers/tf_proto_utils.py ./proto_utils

#Build vdo proto
WORKDIR /build/vdo
COPY apis/videocapture.proto ./
RUN mkdir ./proto_utils && python3 -m grpc_tools.protoc -I . --python_out=./proto_utils --grpc_python_out=./proto_utils videocapture.proto
COPY apis/wrappers/vdo_proto_utils.py ./proto_utils

# Build keyvalue proto
WORKDIR /build/param
COPY apis/keyvaluestore.proto ./
RUN mkdir ./proto_utils && python3 -m grpc_tools.protoc -I . --python_out=./proto_utils --grpc_python_out=./proto_utils keyvaluestore.proto
<<<<<<< HEAD
=======

# Saving required libraries versions into a file
RUN pip freeze | grep -E '^(grpcio|protobuf|six)==' > /build/requirements.txt



>>>>>>> 9f2e89f (save grpc version in file)
